version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: role_management
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5

  backend:
    build:
      context: ./dashboard-backend
      dockerfile: Dockerfile
    container_name: backend_container
    depends_on:
      - postgres
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: role_management
      JWT_SECRET: 2fc44b77cbba10d9ff10fb5b6962c00815cc71ed8cff01ebda22637f039b0527851597828ff0c62c6c75d25eb5c54f708132e6078adfd57f908d8592470802be
      PORT: 5000
    ports:
      - "5000:5000"
    command: >
      sh -c "npm install &&
             npx knex migrate:latest &&
             npx knex seed:run &&
             npm start"

  frontend:
    build:
      context: ./dashboard-frontend
      dockerfile: Dockerfile
    container_name: frontend_container
    depends_on:
      - backend
    environment:
      NODE_ENV: development
    ports:
      - "5173:5173"
    command: >
      sh -c "npm install && npm run dev"

volumes:
  postgres_data:

env_file:
  - ./backend/.env